# 
# This recipe builds a container definition for FALL3D that currently targets an environment with MPI
# and OpenACC support.
# The generation is parameterized solely using the provided user arguments, which include:
# 
# - `cluster`: Specifies the target cluster ('leonardo' or 'thea').
# - `fall3d_version`: Fall3d version to build (default is '9.0.1').
# - `fall3d_single_precision`: Indicates whether to build Fall3d for single precision (default is 'NO').
# 
# For example, to generate a Singularity definition file for the 'leonardo' cluster, you can run:
# 
#     $ hpccm --recipe bb_recipe.py --userarg cluster="leonardo"             --format singularity --singularity-version=3.2
# 
# Similarly, for the 'thea' cluster:
# 
#     $ hpccm --recipe bb_recipe.py --userarg cluster="thea"             --format singularity --singularity-version=3.2
# 
# Note:
#     - This recipe uses SHA-256 content digests as unique identifiers for both the devel and 
#       runtime base images. These digests ensure safety and reproducibility.
# 

# NOTE: this definition file depends on features only available in
# Singularity 3.2 and later.
BootStrap: docker
From: nvcr.io/nvidia/nvhpc@sha256:da058394e75309cf6c9002a0d47332b0e730f107f029464819a4a9ba2a6e0454
Stage: devel
%post
    . /.singularity.d/env/10-docker*.sh

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        autoconf \
        ca-certificates \
        curl \
        environment-modules \
        libcurl4-openssl-dev \
        pkg-config \
        python3
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    . /usr/share/modules/init/sh
    module use /opt/nvidia/hpc_sdk/modulefiles
    module load hpcx-cuda12

%environment
    export CC=mpicc
    export FC=mpif90

# HDF5 version 1.14.3
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bzip2 \
        file \
        make \
        wget \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.14/hdf5-1.14.3/src/hdf5-1.14.3.tar.bz2
    mkdir -p /var/tmp && tar -x -f /var/tmp/hdf5-1.14.3.tar.bz2 -C /var/tmp -j
    cd /var/tmp/hdf5-1.14.3 &&   ./configure --prefix=/opt/hdf5 --disable-cxx --disable-shared --enable-build-mode=production --enable-fortran --enable-parallel
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /var/tmp/hdf5-1.14.3 /var/tmp/hdf5-1.14.3.tar.bz2
%environment
    export CPATH=/opt/hdf5/include:$CPATH
    export HDF5_DIR=/opt/hdf5
    export LD_LIBRARY_PATH=/opt/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/hdf5/lib:$LIBRARY_PATH
    export PATH=/opt/hdf5/bin:$PATH
%post
    export CPATH=/opt/hdf5/include:$CPATH
    export HDF5_DIR=/opt/hdf5
    export LD_LIBRARY_PATH=/opt/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/hdf5/lib:$LIBRARY_PATH
    export PATH=/opt/hdf5/bin:$PATH

%environment
    export SEQ_CC=nvc

# PnetCDF version 1.12.3
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        file \
        m4 \
        make \
        perl \
        tar \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://parallel-netcdf.github.io/Release/pnetcdf-1.12.3.tar.gz
    mkdir -p /var/tmp && tar -x -f /var/tmp/pnetcdf-1.12.3.tar.gz -C /var/tmp -z
    cd /var/tmp/pnetcdf-1.12.3 &&  CC=mpicc CXX=mpicxx F77=mpif77 F90=mpif90 FC=mpifort ./configure --prefix=/opt/pnetcdf/ --disable-cxx --disable-silent-rules --enable-fortran --enable-relax-coord-bound --enable-shared --enable-static --with-mpi
    cd /var/tmp/pnetcdf-1.12.3
    sed -i -e 's#pic_flag=""#pic_flag=" -fpic -DPIC"#' -e 's#wl=""#wl="-Wl,"#' libtool
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /var/tmp/pnetcdf-1.12.3 /var/tmp/pnetcdf-1.12.3.tar.gz
%environment
    export CPATH=/opt/pnetcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/pnetcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/pnetcdf/lib:$LIBRARY_PATH
    export PATH=/opt/pnetcdf/bin:$PATH
%post
    export CPATH=/opt/pnetcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/pnetcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/pnetcdf/lib:$LIBRARY_PATH
    export PATH=/opt/pnetcdf/bin:$PATH

# NetCDF version 4.9.2, NetCDF Fortran version 4.6.1
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        ca-certificates \
        file \
        libcurl4-openssl-dev \
        m4 \
        make \
        wget \
        zlib1g-dev
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://github.com/Unidata/netcdf-c/archive/v4.9.2.tar.gz
    mkdir -p /var/tmp && tar -x -f /var/tmp/v4.9.2.tar.gz -C /var/tmp -z
    cd /var/tmp/netcdf-c-4.9.2 &&   ./configure --prefix=/opt/netcdf --disable-doxygen --disable-parallel-tests --disable-tests --enable-mpi --enable-shared --enable-static --with-pnetcdf=/opt/pnetcdf
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /var/tmp/netcdf-c-4.9.2 /var/tmp/v4.9.2.tar.gz
%environment
    export CPATH=/opt/netcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/netcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/netcdf/lib:$LIBRARY_PATH
    export PATH=/opt/netcdf/bin:$PATH
%post
    export CPATH=/opt/netcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/netcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/netcdf/lib:$LIBRARY_PATH
    export PATH=/opt/netcdf/bin:$PATH
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://github.com/Unidata/netcdf-fortran/archive/v4.6.1.tar.gz
    mkdir -p /var/tmp && tar -x -f /var/tmp/v4.6.1.tar.gz -C /var/tmp -z
    cd /var/tmp/netcdf-fortran-4.6.1 &&   ./configure --prefix=/opt/netcdf --disable-doxygen --disable-parallel-tests --disable-tests --enable-mpi --enable-shared --enable-static --with-pnetcdf=/opt/pnetcdf
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /var/tmp/netcdf-fortran-4.6.1 /var/tmp/v4.6.1.tar.gz

# https://gitlab.com/fall3d-suite/fall3d/-/archive/9.0.1/fall3d-9.0.1.tar.gz
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://gitlab.com/fall3d-suite/fall3d/-/archive/9.0.1/fall3d-9.0.1.tar.gz
    mkdir -p /var/tmp && tar -x -f /var/tmp/fall3d-9.0.1.tar.gz -C /var/tmp -z
    cd /var/tmp/fall3d-9.0.1
    mkdir -p /opt/fall3d/bin
    mkdir -p /var/tmp/fall3d-9.0.1/build && cd /var/tmp/fall3d-9.0.1/build && cmake -DCMAKE_INSTALL_PREFIX=/opt/fall3d -D CMAKE_BUILD_TYPE=Release -D DETAIL_BIN=NO -D WITH-MPI=YES -D WITH-ACC=YES -D CMAKE_Fortran_COMPILER=nvfortran -D CUSTOM_COMPILER_FLAGS="-fast -tp=neoverse-v2 -gpu=sm_90" -D WITH-R4=NO /var/tmp/fall3d-9.0.1
    cmake --build /var/tmp/fall3d-9.0.1/build --target all -- -j$(nproc)
    cd /opt/fall3d
    cp /var/tmp/fall3d-9.0.1/build/Fall3d.x /opt/fall3d/bin/
    rm -rf /var/tmp/fall3d-9.0.1 /var/tmp/fall3d-9.0.1.tar.gz

# NOTE: this definition file depends on features only available in
# Singularity 3.2 and later.
BootStrap: docker
From: nvcr.io/nvidia/nvhpc@sha256:fb36c0c055458603df27c31dbdf6ab02fc483f76f4272e7db99546ffe710d914
Stage: runtime
%post
    . /.singularity.d/env/10-docker*.sh

# HDF5
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        zlib1g
    rm -rf /var/lib/apt/lists/*
%files from devel
    /opt/hdf5 /opt/hdf5
%environment
    export CPATH=/opt/hdf5/include:$CPATH
    export HDF5_DIR=/opt/hdf5
    export LD_LIBRARY_PATH=/opt/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/hdf5/lib:$LIBRARY_PATH
    export PATH=/opt/hdf5/bin:$PATH
%post
    export CPATH=/opt/hdf5/include:$CPATH
    export HDF5_DIR=/opt/hdf5
    export LD_LIBRARY_PATH=/opt/hdf5/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/hdf5/lib:$LIBRARY_PATH
    export PATH=/opt/hdf5/bin:$PATH

# PnetCDF
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libatomic1
    rm -rf /var/lib/apt/lists/*
%files from devel
    /opt/pnetcdf/ /opt/pnetcdf/
%environment
    export CPATH=/opt/pnetcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/pnetcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/pnetcdf/lib:$LIBRARY_PATH
    export PATH=/opt/pnetcdf/bin:$PATH
%post
    export CPATH=/opt/pnetcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/pnetcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/pnetcdf/lib:$LIBRARY_PATH
    export PATH=/opt/pnetcdf/bin:$PATH

# NetCDF
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        zlib1g
    rm -rf /var/lib/apt/lists/*
%files from devel
    /opt/netcdf /opt/netcdf
%environment
    export CPATH=/opt/netcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/netcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/netcdf/lib:$LIBRARY_PATH
    export PATH=/opt/netcdf/bin:$PATH
%post
    export CPATH=/opt/netcdf/include:$CPATH
    export LD_LIBRARY_PATH=/opt/netcdf/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/opt/netcdf/lib:$LIBRARY_PATH
    export PATH=/opt/netcdf/bin:$PATH

# https://gitlab.com/fall3d-suite/fall3d/-/archive/9.0.1/fall3d-9.0.1.tar.gz
%files from devel
    /opt/fall3d /opt/fall3d
%environment
    export PATH=/opt/fall3d/bin
%post
    export PATH=/opt/fall3d/bin
